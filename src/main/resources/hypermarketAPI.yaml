openapi: "3.0.3"
info:
  version: 1.0.0
  title: hypermarket-api
servers:
  - url: http://localhost:8080
paths:
  /hypermarkets:
    post:
      summary: Create a hypermarket
      operationId: createHypermarket
      tags:
        - hypermarkets
      requestBody:
        description: hypermarket to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hypermarket'
      responses:
        201:
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /hypermarkets/{hypermarketId}:
    get:
      summary: Info for a specific hypermarket
      operationId: getHypermarketById
      tags:
        - hypermarkets
      parameters:
        - name: hypermarketId
          in: path
          required: true
          description: The id of the hypermarket to retrieve
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HypermarketInstance"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      summary: delete hypermarket
      operationId: deleteHypermarketById
      tags:
        - hypermarkets
      parameters:
        - name: hypermarketId
          in: path
          required: true
          description: The id of the hypermarket to retrieve
          schema:
            type: integer
            format: int64
      responses:
        204:
          description: entry successfully deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /hypermarkets/{hypermarketId}/grocery-items:
    post:
      summary: Create a grocery item
      operationId: createGroceryItem
      tags:
        - grocery items
      parameters:
        - name: hypermarketId
          in: path
          required: true
          description: The id of the hypermarket to create the grocery item for
          schema:
            type: integer
            format: int64
      requestBody:
        description: grocery item to add to the hypermarket
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/GroceryItem'
      responses:
        201:
          description: successfully created grocery item instance
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroceryItemInstance'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      summary: retrieve all grocery items for a given hypermarket
      operationId: getGroceryItemsForHypermarket
      tags:
        - grocery items
      parameters:
        - name: hypermarketId
          in: path
          required: true
          description: The id of the hypermarket to create the grocery item for
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: all grocery items for the requested hypermarket
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroceryItemInstance'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    Hypermarket:
      required:
        - name
        - address
      properties:
        name:
          type: string
        address:
          type: string
    HypermarketInstance:
      allOf:
        - $ref: '#/components/schemas/Hypermarket'
        - type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
    Hypermarkets:
      type: array
      items:
        $ref: "#/components/schemas/HypermarketInstance"
#
#    ClothingCollection:
#      required:
#        - season
#        - removeDate
#        - active
#      properties:
#        season:
#          type: string
#          enum:
#            - winter
#            - spring
#            - summer
#            - fall
#        removeDate:
#          type: string
#          format: date
#        active:
#          type: boolean
#
#    ClothingCollectionInstance:
#      allOf:
#        - $ref: '#/components/schemas/ClothingCollection'
#        - type: object
#      required:
#        - id
#      properties:
#        id:
#          type: integer
#          format: int64
#
#    ClothingItem:
#      required:
#        - clothingCollectionId
#        - section
#        - name
#        - brand
#      properties:
#        clothingCollectionId:
#          type: integer
#          format: int64
#        section:
#          type: string
#          enum:
#            - mens
#            - womens
#            - girls
#            - boys
#        name:
#          type: string
#        brand:
#          type: string
    GroceryItem:
      required:
        - itemName
        - brand
        - expirationDate
      properties:
        itemName:
          type: string
        brand:
          type: string
        expirationDate:
          type: string
          format: date
    GroceryItemInstance:
      allOf:
        - $ref: '#/components/schemas/GroceryItem'
        - type: object
      required:
        - id
        - hypermarketId
      properties:
        id:
          type: integer
          format: int64
        hypermarketId:
          type: integer
          format: int64
    ErrorResponse:
      required:
        - message
      properties:
        message:
          type: string